{"version":3,"sources":["utils/apiDataCall.js","utils/parseForm.js","components/Characters.js","components/Pagination.js","components/Aside.js","components/App.js","index.js"],"names":["apiDataCall","arg","_query","Object","asyncToGenerator","regenerator_default","a","mark","_callee","address","response","wrap","_context","prev","next","fetch","sent","ok","json","abrupt","stop","apply","this","arguments","_x","query","concat","parseForm","form","additionalInputsToParse","entries","filter","item","name","map","checked","type","value","Characters","props","react_default","createElement","className","charactersData","charData","key","id","src","image","alt","status","species","gender","Pagination","pagesCount","paginationElements","i","push","onClick","currentPage","filterOptions","FormFieldset","filterName","keys","defaultChecked","Aside","onSubmit","formSubmitHandler","placeholder","Aside_FormFieldset","href","appStatus","dataNotLoaded","dataLoaded","App","state","statusText","ascDescArraySorter","arr","console","log","sort","b","paginationClickHandler","e","clickedElementId","target","queryWithPagination","_this","then","setState","results","info","pages","preventDefault","formDataArray","characterIdSearchValue","find","Number","catch","reason","join","sortingOption","sortedArrayOfChars","_this2","components_Aside","Characters_Characters","Pagination_Pagination","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.db8fbfe8.chunk.js","sourcesContent":["export default function(arg) {\r\n  const apiPaths = {\r\n    ApiCharactersCall: \"https://rickandmortyapi.com/api/character\"\r\n  };\r\n\r\n  async function query(address) {\r\n    const response = await fetch(address);\r\n\r\n    if (response.ok) {\r\n      return await response.json();\r\n    } else {\r\n      throw response;\r\n    }\r\n  }\r\n\r\n  return query(`${apiPaths.ApiCharactersCall}${arg}`);\r\n}\r\n","export default form => {\r\n  const additionalInputsToParse = {\r\n    searchInput: \"search\"\r\n  };\r\n\r\n  return Object.entries(form)\r\n    .filter(item => (item[1].name ? item : null))\r\n    .map(item => {\r\n      return item[1].checked ||\r\n        item[1].type === additionalInputsToParse.searchInput\r\n        ? { name: item[1].name, value: item[1].value }\r\n        : null;\r\n    })\r\n    .filter(item => (item ? item : null));\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Characters = props => {\r\n  return (\r\n    <ul className=\"card-list\">\r\n      {props.charactersData.map(charData => {\r\n        return (\r\n          <li key={charData.id} className=\"card-list__item\">\r\n            <div className=\"card-list__item-wrap\">\r\n              <img className=\"card-list__photo\" src={charData.image} alt=\"#\" />\r\n              <div className=\"card-list__name-wrap\">\r\n                <p className=\"card-list__name\">{charData.name}</p>\r\n                <p className=\"card-item__id-info\">ID: {charData.id}</p>\r\n              </div>\r\n              <div className=\"card-list__character-specs\">\r\n                <div className=\"card-list__character-spec-item\">\r\n                  <span className=\"card-list__spec\">Status</span>\r\n                  <span className=\"card-list__spec-value\">\r\n                    {charData.status}\r\n                  </span>\r\n                </div>\r\n                <div className=\"card-list__character-spec-item\">\r\n                  <span className=\"card-list__spec\">Species</span>\r\n                  <span className=\"card-list__spec-value\">\r\n                    {charData.species}\r\n                  </span>\r\n                </div>\r\n                <div className=\"card-list__character-spec-item\">\r\n                  <span className=\"card-list__spec\">Gender</span>\r\n                  <span className=\"card-list__spec-value\">\r\n                    {charData.gender}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Pagination = props => {\r\n  if (!props.pagesCount || props.pagesCount === 1) return \"\";\r\n\r\n  let paginationElements = [];\r\n\r\n  for (let i = 1; i <= props.pagesCount; i++) {\r\n    paginationElements.push(\r\n      <li\r\n        onClick={props.onClick}\r\n        className={\r\n          \"pagination__item\" +\r\n          (props.currentPage === i ? \" pagination__item_active\" : \"\")\r\n        }\r\n        id={i}\r\n        key={i}\r\n      >\r\n        {i}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return <ul className=\"pagination\">{paginationElements}</ul>;\r\n};\r\n","import React from \"react\";\r\n\r\nconst filterOptions = {\r\n  species: [\"all\", \"human\", \"alien\", \"humanoid\", \"mytholog\", \"animal\", \"robot\"],\r\n  gender: [\"all\", \"male\", \"female\", \"genderless\", \"unknown\"],\r\n  status: [\"all\", \"alive\", \"dead\", \"unknown\"]\r\n};\r\n\r\nconst FormFieldset = filter => {\r\n  const filterName = Object.keys(filter)[0];\r\n\r\n  return (\r\n    <fieldset className=\"filter__item-wrap\">\r\n      <legend className=\"filter__type-head\">{filterName}</legend>\r\n      {filter[Object.keys(filter)].map((item, i) => {\r\n        return (\r\n          <label key={i} className=\"filter__item\">\r\n            <input\r\n              type=\"radio\"\r\n              name={filterName}\r\n              value={item === \"all\" ? \"\" : item}\r\n              defaultChecked={item === \"all\" ? true : false}\r\n            />\r\n            {item}\r\n          </label>\r\n        );\r\n      })}\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nconst Aside = props => {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <form onSubmit={props.formSubmitHandler} className=\"filter\">\r\n        <section>\r\n          <h2 className=\"filter__heading\">Search:</h2>\r\n          <label>\r\n            <input\r\n              type=\"search\"\r\n              name=\"name\"\r\n              placeholder=\"Search by name or ID\"\r\n            />\r\n          </label>\r\n        </section>\r\n\r\n        <section>\r\n          <h2 className=\"filter__heading\">Sorting:</h2>\r\n          <fieldset className=\"filter__item-wrap\">\r\n            <legend className=\"filter__type-head\">Name</legend>\r\n            <label className=\"filter__item\">\r\n              <input type=\"radio\" name=\"sort\" value=\"asc-name\" />\r\n              asc\r\n            </label>\r\n            <label className=\"filter__item\">\r\n              <input type=\"radio\" name=\"sort\" value=\"desc-name\" />\r\n              desc\r\n            </label>\r\n          </fieldset>\r\n          <fieldset className=\"filter__item-wrap\">\r\n            <legend className=\"filter__type-head\">ID</legend>\r\n            <label className=\"filter__item\">\r\n              <input type=\"radio\" name=\"sort\" defaultChecked value=\"asc-id\" />\r\n              asc\r\n            </label>\r\n            <label className=\"filter__item\">\r\n              <input type=\"radio\" name=\"sort\" value=\"desc-id\" />\r\n              desc\r\n            </label>\r\n          </fieldset>\r\n        </section>\r\n\r\n        <section>\r\n          <h2 className=\"filter__heading\">Filtering:</h2>\r\n          <FormFieldset species={filterOptions.species} />\r\n          <FormFieldset status={filterOptions.status} />\r\n          <FormFieldset gender={filterOptions.gender} />\r\n        </section>\r\n\r\n        <button className=\"filter__btn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <button className=\"filter__btn\" type=\"button\">\r\n          <a href=\"/react-rick-and-morty/\">Reset</a>\r\n        </button>\r\n      </form>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React, { Component } from \"react\";\nimport apiDataCall from \"../utils/apiDataCall\";\nimport parseForm from \"../utils/parseForm\";\nimport { Characters } from \"./Characters\";\nimport { Pagination } from \"./Pagination\";\nimport Aside from \"./Aside\";\n\nconst appStatus = {\n  dataNotLoaded: \"notLoaded\",\n  dataLoaded: \"ok\"\n};\n\nclass App extends Component {\n  state = {\n    status: appStatus.dataNotLoaded,\n    query: \"\",\n    currentPage: 1,\n    statusText: \"Loading...\"\n  };\n\n  componentDidMount() {\n    apiDataCall(this.state.query)\n      .then(response => {\n        this.setState({\n          charactersData: response.results,\n          pagesCount: response.info.pages,\n          status: appStatus.dataLoaded\n        });\n      })\n      .catch(reason => {\n        this.setState({\n          status: reason.status,\n          statusText: reason.statusText\n        });\n      });\n  }\n\n  ascDescArraySorter = (arr, type) => {\n    console.log(arr);\n    switch (type) {\n      case \"asc-name\":\n        return arr.sort((b, a) => (b.name < a.name ? -1 : 1));\n      case \"desc-name\":\n        return arr.sort((a, b) => (b.name < a.name ? -1 : 1));\n      case \"asc-id\":\n        return arr.sort((b, a) => (b.id < a.id ? -1 : 1));\n      case \"desc-id\":\n        return arr.sort((a, b) => (b.id < a.id ? -1 : 1));\n      default:\n        return arr;\n    }\n  };\n\n  paginationClickHandler = e => {\n    const clickedElementId = +e.target.id;\n    const queryWithPagination = `page=${clickedElementId}&${this.state.query}`;\n\n    apiDataCall(`?${queryWithPagination}`).then(response => {\n      this.setState({\n        charactersData: response.results,\n        pagesCount: response.info.pages,\n        currentPage: clickedElementId\n      });\n    });\n  };\n\n  formSubmitHandler = e => {\n    e.preventDefault();\n\n    const formDataArray = parseForm(e.target);\n\n    const characterIdSearchValue = formDataArray.find(\n      item => item.name === \"name\"\n    ).value;\n\n    if (Number(characterIdSearchValue)) {\n      apiDataCall(`/${characterIdSearchValue}`)\n        .then(response => {\n          this.setState({\n            charactersData: [response],\n            pagesCount: null,\n            status: appStatus.dataLoaded\n          });\n        })\n        .catch(reason => {\n          this.setState({\n            status: reason.status,\n            statusText: reason.statusText\n          });\n        });\n\n      return;\n    }\n\n    const query = formDataArray\n      .map(item => (item.value ? `${item.name}=${item.value}&` : \"\"))\n      .join(\"\");\n\n    const sortingOption = formDataArray.find(item => item.name === \"sort\")\n      .value;\n\n    apiDataCall(`?${query}`)\n      .then(response => {\n        if (sortingOption) {\n          const sortedArrayOfChars = this.ascDescArraySorter(\n            response.results,\n            sortingOption\n          );\n\n          this.setState({\n            charactersData: sortedArrayOfChars\n          });\n        } else {\n          this.setState({\n            charactersData: response.results\n          });\n        }\n\n        this.setState({\n          pagesCount: response.info.pages,\n          status: appStatus.dataLoaded,\n          query: query,\n          currentPage: 1\n        });\n      })\n      .catch(reason => {\n        this.setState({\n          status: reason.status,\n          statusText: reason.statusText\n        });\n      });\n  };\n\n  render() {\n    if (this.state.status === appStatus.dataNotLoaded) {\n      return (\n        <div className=\"container\">\n          <Aside formSubmitHandler={this.formSubmitHandler} />\n          <main>\n            <h2>{this.state.statusText}</h2>\n          </main>\n        </div>\n      );\n    } else if (this.state.status === appStatus.dataLoaded) {\n      return (\n        <div className=\"container\">\n          <Aside formSubmitHandler={this.formSubmitHandler} />\n          <main>\n            <Characters charactersData={this.state.charactersData} />\n            <Pagination\n              pagesCount={this.state.pagesCount}\n              currentPage={this.state.currentPage}\n              onClick={this.paginationClickHandler}\n            />\n          </main>\n        </div>\n      );\n    } else if (this.state.status === 404) {\n      return (\n        <div className=\"container\">\n          <Aside formSubmitHandler={this.formSubmitHandler} />\n          <main>\n            <h2>{this.state.statusText}</h2>\n          </main>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container\">\n          <main>\n            <h2>Unkown error while rendering</h2>\n          </main>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/App.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}